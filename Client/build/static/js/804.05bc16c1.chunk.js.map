{"version":3,"file":"static/js/804.05bc16c1.chunk.js","mappings":"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","sources":["../node_modules/phosphor-react/src/icons/Bell.tsx","../node_modules/phosphor-react/src/icons/Lock.tsx","../node_modules/phosphor-react/src/icons/Key.tsx","../node_modules/phosphor-react/src/icons/PencilCircle.tsx","../node_modules/phosphor-react/src/icons/Note.tsx","../node_modules/phosphor-react/src/icons/Info.tsx","pages/dashboard/Settings.js","../node_modules/@mui/material/esm/Typography/typographyClasses.js","../node_modules/@mui/material/esm/Typography/Typography.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M220.8,175.9c-5.9-10.2-13-29.6-13-63.9v-7.1c0-44.3-35.5-80.6-79.2-80.9H128a79.9,79.9,0,0,0-79.8,80v8c0,34.3-7.1,53.7-13,63.9A16,16,0,0,0,49,200H88a40,40,0,0,0,80,0h39a15.9,15.9,0,0,0,13.9-8A16.2,16.2,0,0,0,220.8,175.9ZM128,224a24.1,24.1,0,0,1-24-24h48A24.1,24.1,0,0,1,128,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Bell = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBell.displayName = \"Bell\";\n\nexport default Bell;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"40\" y=\"88\" width=\"176\" height=\"128\" rx=\"8\" opacity=\"0.2\" />\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M208,80H172V52a44,44,0,0,0-88,0V80H48A16,16,0,0,0,32,96V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V96A16,16,0,0,0,208,80Zm-80,84a12,12,0,1,1,12-12A12,12,0,0,1,128,164Zm28-84H100V52a28,28,0,0,1,56,0Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Lock = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nLock.displayName = \"Lock\";\n\nexport default Lock;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M160,16A80.1,80.1,0,0,0,83.9,120.8L26.3,178.3A8.1,8.1,0,0,0,24,184v40a8,8,0,0,0,8,8H72a8,8,0,0,0,8-8V208H96a8,8,0,0,0,8-8V184h16a8.1,8.1,0,0,0,5.7-2.3l9.5-9.6A80,80,0,1,0,160,16Zm20,76a16,16,0,1,1,16-16A16,16,0,0,1,180,92Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Key = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nKey.displayName = \"Key\";\n\nexport default Key;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M128,200a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M128,224V200a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"98.5\"\n      y1=\"136\"\n      x2=\"157.5\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M80,211.2a96,96,0,1,1,96,0h0V176L128,72,80,176v35.2Z\"\n      opacity=\"0.2\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M201.5,54.5a103.8,103.8,0,0,0-147,0,103.8,103.8,0,0,0,0,147,103.8,103.8,0,0,0,147,0,103.8,103.8,0,0,0,0-147ZM128,170.9a31.9,31.9,0,0,0-32.3-9.8L111,128h34l15.3,33.1a31.9,31.9,0,0,0-32.3,9.8Zm40,35.5a89,89,0,0,1-32,9.2V192a16,16,0,0,1,32,0Zm22.2-16.2c-2,2-4.1,3.9-6.2,5.7V176a9.8,9.8,0,0,0-.7-3.4l-48-104h-.1a4.1,4.1,0,0,0-.5-.9c0-.1,0-.1-.1-.2l-.5-.7H134a4.6,4.6,0,0,0-.7-.7h-.2l-.7-.6h-.2l-.8-.5h-.1l-.9-.3h-.3l-.9-.2h-2.4l-1,.2h-.2l-.8.3h-.2l-.9.4h-.1l-.7.6h-.2l-.7.7h-.1l-.5.7-.2.2a4.1,4.1,0,0,1-.5.9l-22.1,48h0L72.7,172.6A9.8,9.8,0,0,0,72,176v19.9c-2.1-1.8-4.2-3.7-6.2-5.7a88,88,0,1,1,124.4,0Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst PencilCircle = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPencilCircle.displayName = \"PencilCircle\";\n\nexport default PencilCircle;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"108\"\n      x2=\"160\"\n      y2=\"108\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"148\"\n      x2=\"116\"\n      y2=\"148\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"215.3 156 156 156 156 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"216 160 160 160 160 216 216 160\" opacity=\"0.2\" />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H156.7a15.9,15.9,0,0,0,11.3-4.7L219.3,168a15.9,15.9,0,0,0,4.7-11.3V48A16,16,0,0,0,208,32ZM96,88h64a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16Zm32,80H96a8,8,0,0,1,0-16h32a8,8,0,0,1,0,16ZM96,136a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Zm64,68.7V160h44.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Note = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nNote.displayName = \"Note\";\n\nexport default Note;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"120 124 128 124 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"128\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm-2,48a12,12,0,1,1-12,12A12,12,0,0,1,126,72Zm10,112h-8a8,8,0,0,1-8-8V128a8,8,0,0,1,0-16h8a8,8,0,0,1,8,8v48a8,8,0,0,1,0,16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Info = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nInfo.displayName = \"Info\";\n\nexport default Info;\n","import React from \"react\";\r\nimport { Avatar, Box, Divider, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Bell, CaretLeft, Image, Info, Key, Lock, Note, PencilCircle } from \"phosphor-react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nconst list = [\r\n  {\r\n    key: 0,\r\n    icon: <Bell size={20} />,\r\n    title: \"Notifications\",\r\n    onClick: () => {},\r\n  },\r\n  {\r\n    key: 1,\r\n    icon: <Lock size={20} />,\r\n    title: \"Privacy\",\r\n    onClick: () => {},\r\n  },\r\n  {\r\n    key: 2,\r\n    icon: <Key size={20} />,\r\n    title: \"Security\",\r\n    onClick: () => {},\r\n  },\r\n  {\r\n    key: 3,\r\n    icon: <PencilCircle size={20} />,\r\n    title: \"Theme\",\r\n    onClick: () => {},\r\n  },\r\n  {\r\n    key: 4,\r\n    icon: <Image size={20} />,\r\n    title: \"Chat Wallpaper\",\r\n    onClick: () => {},\r\n  },\r\n  {\r\n    key: 5,\r\n    icon: <Note size={20} />,\r\n    title: \"Request Account Info\",\r\n    onClick: () => {},\r\n  },\r\n  {\r\n    key: 6,\r\n    icon: <Info size={20} />,\r\n    title: \"Help\",\r\n    onClick: () => {},\r\n  },\r\n];\r\n\r\nconst Settings = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  return (\r\n    <>\r\n      <Stack direction={\"row\"} width={\"100%\"}>\r\n        {/* left */}\r\n        <Box\r\n          sx={{\r\n            width: isMobile ? \"100%\" : 320,\r\n            height: \"100vh\",\r\n            // overflow: \"scroll\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background.paper,\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.5)\",\r\n          }}\r\n        >\r\n          <Stack p={2} spacing={3}>\r\n            {/* header */}\r\n            <Stack direction={\"row\"} alignItems={\"center\"} spacing={3}>\r\n              <IconButton>\r\n                <CaretLeft size={24} color=\"#4B4B4B\" />\r\n              </IconButton>\r\n              <Typography variant=\"h6\">Settings</Typography>\r\n            </Stack>\r\n\r\n            {/* profile */}\r\n            <Stack alignItems={\"center\"} direction={\"row\"} p={1} spacing={3}>\r\n              <Avatar\r\n                alt={faker.name.firstName()}\r\n                src={faker.image.city()}\r\n                sx={{ height: 64, width: 64 }}\r\n              />\r\n              <Stack direction={\"column\"} spacing={0.5}>\r\n                <Typography variant=\"article\">\r\n                  {faker.name.firstName()}\r\n                </Typography>\r\n                <Typography variant=\"body2\">{faker.random.words()}</Typography>\r\n              </Stack>\r\n            </Stack>\r\n\r\n            {/* List of options */}\r\n            <Stack spacing={3} p={1}>\r\n              {list.map(({key, icon, title, onClick}) => { \r\n                return (<>\r\n                  <Stack key={key} sx={{cursor:\"pointer\"}} spacing={2} onClick={onClick}>\r\n                    <Stack direction={\"row\"} alignItems={\"center\"} spacing={2}>\r\n                      {icon}\r\n                      <Typography variant=\"body2\">{title}</Typography>\r\n                    </Stack>\r\n                  </Stack>\r\n                  {key !== 6 && <Divider/>}\r\n                </>)\r\n              })}\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","renderPath","weight","renderPathForWeight","Bell","forwardRef","props","ref","IconBase","displayName","x","y","width","height","rx","cx","cy","r","Lock","Key","points","x1","y1","x2","y2","PencilCircle","Note","Info","list","key","icon","size","title","onClick","theme","useTheme","isMobile","useResponsive","Stack","direction","Box","sx","backgroundColor","palette","mode","background","paper","boxShadow","p","spacing","alignItems","IconButton","Typography","variant","Avatar","alt","faker","src","map","cursor","Divider","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","CaretLeft"],"sourceRoot":""}