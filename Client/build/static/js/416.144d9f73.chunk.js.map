{"version":3,"file":"static/js/416.144d9f73.chunk.js","mappings":"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","sources":["components/forms/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx","../node_modules/phosphor-react/src/icons/Eye.tsx","../node_modules/phosphor-react/src/icons/EyeSlash.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { UpdatePassword } from \"../../redux/slices/auth\";\r\nimport { showSnackbar } from \"../../redux/slices/app\";\r\n\r\nconst NewPasswordForm = () => {\r\n\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      if(password === confirmPassword){\r\n        dispatch(UpdatePassword({password, uniqueId: searchParams.get(\"token\")}));\r\n      }else{\r\n        // console.log(\"not equal\");\r\n        dispatch(showSnackbar({severity: \"warning\", message: \"Passwords aren't equal !\"}))\r\n      }     \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <Stack spacing={3}>\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          onInput={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          fullWidth\r\n          id=\"confirm-password\"\r\n          label=\"Confirm Password\"\r\n          variant=\"outlined\"\r\n          onInput={(e) => setConfirmPassword(e.target.value)}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                >\r\n                  {showPassword ? (\r\n                    <Eye color=\"#000\" />\r\n                  ) : (\r\n                    <EyeSlash color=\"#000\" />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button fullWidth type=\"submit\" variant=\"contained\">\r\n          Submit\r\n        </Button>\r\n      </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPasswordForm;\r\n","import React from \"react\";\r\nimport { Link, Stack, Typography } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { CaretLeft } from \"phosphor-react\";\r\nimport NewPasswordForm from \"../../components/forms/NewPasswordForm\";\r\n\r\nconst NewPassword = () => {\r\n  return (\r\n    <>\r\n      <Stack spacing={3} sx={{ my: 4, position: \"releative\" }}>\r\n        <Typography variant=\"h5\">Reset your Password</Typography>\r\n        <Typography>\r\n          Enter your new password\r\n        </Typography>\r\n      </Stack>\r\n\r\n      {/* new  password form */}\r\n      <NewPasswordForm/>\r\n\r\n      <Stack mt={2} direction={\"row\"} alignItems={\"center\"}>\r\n        <CaretLeft />\r\n        <Link to=\"/auth/login\" component={RouterLink} variant=\"subtitle2\">\r\n          Return to Login\r\n        </Link>\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"32\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Zm0,112a40,40,0,1,1,40-40A40,40,0,0,1,128,168Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M247.3,124.8c-.3-.8-8.8-19.6-27.6-38.5C194.6,61.3,162.9,48,128,48S61.4,61.3,36.3,86.3C17.5,105.2,9,124,8.7,124.8a7.9,7.9,0,0,0,0,6.4c.3.8,8.8,19.6,27.6,38.5C61.4,194.7,93.1,208,128,208s66.6-13.3,91.7-38.3c18.8-18.9,27.3-37.7,27.6-38.5A7.9,7.9,0,0,0,247.3,124.8ZM128,92a36,36,0,1,1-36,36A36,36,0,0,1,128,92Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"40\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Eye = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nEye.displayName = \"Eye\";\n\nexport default Eye;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M74,68.6C33.2,89.2,16,128,16,128s32,72,112,72a117.9,117.9,0,0,0,54-12.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M214.4,163.6C232.1,145.7,240,128,240,128S208,56,128,56c-3.8,0-7.4.2-11,.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,56C48,56,16,128,16,128s32,72,112,72,112-72,112-72S208,56,128,56Zm0,112a40,40,0,1,1,40-40A40,40,0,0,1,128,168Z\"\n      opacity=\"0.2\"\n    />\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M154.9,157.6A39.6,39.6,0,0,1,128,168a40,40,0,0,1-26.9-69.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M74,68.6C33.2,89.2,16,128,16,128s32,72,112,72a117.9,117.9,0,0,0,54-12.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M208.6,169.1C230.4,149.6,240,128,240,128S208,56,128,56a123.9,123.9,0,0,0-20.7,1.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M135.5,88.7a39.9,39.9,0,0,1,32.3,35.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M247.3,124.8c-.3-.8-8.8-19.6-27.6-38.5C194.6,61.3,162.9,48,128,48a132.4,132.4,0,0,0-22,1.8,8.1,8.1,0,0,0-4.6,13.3L202.7,174.5a8,8,0,0,0,5.9,2.6,8.6,8.6,0,0,0,5.4-2c22.8-20.5,32.9-42.9,33.3-43.8A8.2,8.2,0,0,0,247.3,124.8Z\" />\n    <path d=\"M53.9,34.6A8,8,0,0,0,42.1,45.4L61.3,66.5C25,88.8,9.4,123.2,8.7,124.8a8.2,8.2,0,0,0,0,6.5c.3.7,8.8,19.5,27.6,38.4C61.4,194.7,93.1,208,128,208a126.9,126.9,0,0,0,52.1-10.8l22,24.2A8,8,0,0,0,208,224a8.2,8.2,0,0,0,5.4-2.1,7.9,7.9,0,0,0,.5-11.3ZM128,164a36,36,0,0,1-29.5-56.6l47.2,51.9A35.4,35.4,0,0,1,128,164Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M154.9,157.6A39.6,39.6,0,0,1,128,168a40,40,0,0,1-26.9-69.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M74,68.6C33.2,89.2,16,128,16,128s32,72,112,72a117.9,117.9,0,0,0,54-12.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M208.6,169.1C230.4,149.6,240,128,240,128S208,56,128,56a123.9,123.9,0,0,0-20.7,1.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M135.5,88.7a39.9,39.9,0,0,1,32.3,35.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M154.9,157.6A39.6,39.6,0,0,1,128,168a40,40,0,0,1-26.9-69.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M74,68.6C33.2,89.2,16,128,16,128s32,72,112,72a117.9,117.9,0,0,0,54-12.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M208.6,169.1C230.4,149.6,240,128,240,128S208,56,128,56a123.9,123.9,0,0,0-20.7,1.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M135.5,88.7a39.9,39.9,0,0,1,32.3,35.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"48\"\n      y1=\"40\"\n      x2=\"208\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M154.9,157.6A39.6,39.6,0,0,1,128,168a40,40,0,0,1-26.9-69.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M74,68.6C33.2,89.2,16,128,16,128s32,72,112,72a117.9,117.9,0,0,0,54-12.6\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M208.6,169.1C230.4,149.6,240,128,240,128S208,56,128,56a123.9,123.9,0,0,0-20.7,1.7\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M135.5,88.7a39.9,39.9,0,0,1,32.3,35.5\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst EyeSlash = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nEyeSlash.displayName = \"EyeSlash\";\n\nexport default EyeSlash;\n"],"names":["useSearchParams","searchParams","dispatch","useDispatch","useState","showPassword","setShowPassword","password","setPassword","confirmPassword","setConfirmPassword","onSubmit","e","preventDefault","UpdatePassword","uniqueId","get","showSnackbar","severity","message","error","console","log","Stack","spacing","TextField","required","fullWidth","id","label","variant","type","onInput","target","value","InputProps","endAdornment","InputAdornment","IconButton","onClick","color","Button","sx","my","position","Typography","mt","direction","alignItems","Link","to","component","RouterLink","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","theme","_extends","display","height","maxHeight","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","pathsByWeight","Map","set","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","CaretLeft","forwardRef","IconBase","displayName","cx","cy","r","Eye","x1","y1","x2","y2","EyeSlash"],"sourceRoot":""}