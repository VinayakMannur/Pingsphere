{"version":3,"file":"static/js/845.be588262.chunk.js","mappings":"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","sources":["../node_modules/phosphor-react/src/icons/Chat.tsx","components/FriendsComponents.js","components/Friends.js","components/Chatss.js","pages/dashboard/GeneralApp.js"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M77.4,201.9l-32.3,27A8,8,0,0,1,32,222.8V64a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8V192a8,8,0,0,1-8,8H82.5A7.8,7.8,0,0,0,77.4,201.9Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M78,201.3,45.1,228.9A8,8,0,0,1,32,222.8V64a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8V192a8,8,0,0,1-8,8H81.7Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M77.4,201.9l-32.3,27A8,8,0,0,1,32,222.8V64a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8V192a8,8,0,0,1-8,8H82.5A7.8,7.8,0,0,0,77.4,201.9Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,48H40A16,16,0,0,0,24,64V222.8a15.7,15.7,0,0,0,9.3,14.5,16,16,0,0,0,17-2.2L82,208.4l134-.4a16,16,0,0,0,16-16V64A16,16,0,0,0,216,48Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M77.4,201.9l-32.3,27A8,8,0,0,1,32,222.8V64a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8V192a8,8,0,0,1-8,8H82.5A7.8,7.8,0,0,0,77.4,201.9Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M77.4,201.9l-32.3,27A8,8,0,0,1,32,222.8V64a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8V192a8,8,0,0,1-8,8H82.5A7.8,7.8,0,0,0,77.4,201.9Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M77.4,201.9l-32.3,27A8,8,0,0,1,32,222.8V64a8,8,0,0,1,8-8H216a8,8,0,0,1,8,8V192a8,8,0,0,1-8,8H82.5A7.8,7.8,0,0,0,77.4,201.9Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Chat = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nChat.displayName = \"Chat\";\n\nexport default Chat;\n","import React from \"react\";\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\nimport { Avatar, Box, Button, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport StyledBadge from \"./StyleBadge\";\r\nimport { socket } from \"../socket\";\r\nimport { Chat } from \"phosphor-react\";\r\n\r\nconst user_id = window.localStorage.getItem(\"user_id\");\r\n\r\nconst StyledChatBox = styled(Box)(({ theme }) => ({\r\n  \"&:hover\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nfunction UserComponent({ firstName, lastName, id, img, online }) {\r\n  const theme = useTheme();\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={1}\r\n    >\r\n      <Stack\r\n        direction={\"row\"}\r\n        alignItems={\"center\"}\r\n        justifyContent={\"space-between\"}\r\n      >\r\n        <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n          {\"\"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <Button\r\n            onClick={() => {\r\n              socket.emit(\"friend_request\", { to: id, from: user_id }, () => {\r\n                alert(\"request-sent\");\r\n              });\r\n            }}\r\n          >\r\n            Send Request\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n}\r\n\r\nfunction FriendsComponent({ firstName, lastName, id, img, online, handleClose }) {\r\n  const theme = useTheme();\r\n  const name = `${firstName} ${lastName}`;\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={1}\r\n    >\r\n      <Stack\r\n        direction={\"row\"}\r\n        alignItems={\"center\"}\r\n        justifyContent={\"space-between\"}\r\n      >\r\n        <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n          {\"\"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <IconButton onClick={() => {\r\n            handleClose()\r\n            socket.emit(\"start_conversation\", {to: id, from: parseInt(user_id)})\r\n          }}>\r\n            <Chat />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n}\r\n\r\nfunction FriendRequestComponent({ firstName, lastName, id, img, online, rid }) {\r\n  const theme = useTheme();\r\n  const name = `${firstName} ${lastName}`;\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={1}\r\n    >\r\n      <Stack\r\n        key={id}\r\n        direction={\"row\"}\r\n        alignItems={\"center\"}\r\n        justifyContent={\"space-between\"}\r\n      >\r\n        <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n          {\"\"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <Button\r\n            onClick={() => {\r\n              socket.emit(\"accept_request\", { request_id: rid }, () => {\r\n                alert(\"Request accepted\");\r\n              });\r\n            }}\r\n          >\r\n            Accept Request\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n}\r\n\r\nexport { UserComponent, FriendsComponent, FriendRequestComponent };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Dialog, DialogContent, Stack, Tab, Tabs } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFriendRequests, getFriends, getUsers } from \"../redux/slices/app\";\r\nimport { FriendRequestComponent, FriendsComponent, UserComponent } from \"./FriendsComponents\";\r\n\r\nconst UsersList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const { users } = useSelector((state) => state.app);\r\n\r\n  return (\r\n    <>\r\n      {users.map((el, idx) => {\r\n        // todo\r\n        return <UserComponent key={el.id} {...el}/>\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FriendsList = ({handleClose}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getFriends());\r\n  }, []);\r\n\r\n  const { friends } = useSelector((state) => state.app);\r\n  // console.log(friends);\r\n  return (\r\n    <>\r\n      {friends && friends.map((el, idx) => {\r\n        // todo\r\n        return <FriendsComponent key={el.id} {...el} handleClose={handleClose}/>\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FriendRequestList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getFriendRequests());\r\n  }, []);\r\n\r\n  const { friendRequests } = useSelector((state) => state.app);\r\n\r\n  // const { requests } = useSelector((state) => state.app);\r\n  // console.log(friendRequests);\r\n  return (\r\n    <>\r\n      {friendRequests && friendRequests.map((el, idx) => {\r\n        //todo should send the actual request id\r\n        return <FriendRequestComponent key={el.id} {...el.senderUsers} rid={el.id}/>\r\n      })\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nconst Friends = ({ open, handleClose }) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog fullWidth open={open} onClose={handleClose} keepMounted>\r\n      <Stack p={2} sx={{ width: \"100%\" }}>\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          <Tab label=\"Explore\" />\r\n          <Tab label=\"Friends\" />\r\n          <Tab label=\"Requests\" />\r\n        </Tabs>\r\n      </Stack>\r\n\r\n      {/* dialog content */}\r\n      <DialogContent>\r\n        <Stack sx={{ height: \"100%\" }}>\r\n          <Stack spacing={2}>\r\n            {(() => {\r\n              switch (value) {\r\n                case 0: //allusers\r\n                  return <UsersList />;\r\n                case 1: //friends\r\n                  return <FriendsList handleClose={handleClose}/>;\r\n                case 2: //requests\r\n                  return <FriendRequestList />;\r\n                default:\r\n                  break;\r\n              }\r\n            })()}\r\n          </Stack>\r\n        </Stack>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CircleDashed, MagnifyingGlass, Users } from \"phosphor-react\";\r\nimport { ChatList } from \"../data\";\r\nimport { SimpleBarStyle } from \"./Scrollbar\";\r\nimport { Search, SearchIconWrapper, StyledInputBase } from \"./search\";\r\nimport ChatElement from \"./ChatElement\";\r\nimport useResponsive from \"../hooks/useResponsive\";\r\nimport Friends from \"./Friends\";\r\nimport { socket } from \"../socket\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FetchDirectConversation } from \"../redux/slices/conversation\";\r\nimport { SelectConversation } from \"../redux/slices/app\";\r\n\r\nconst Chatss = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const user_id = window.localStorage.getItem(\"user_id\");\r\n\r\n  const { conversations } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n    // console.log(conversations);\r\n  useEffect(() => {\r\n    dispatch(SelectConversation())\r\n    socket.emit(\"get_direct_conversations\", { user_id }, (data) => {\r\n      //data is list of existing conversations\r\n      // console.log(data);\r\n      dispatch(FetchDirectConversation({data}))\r\n    });\r\n  }, []);\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          width: isMobile ? \"100%\" : 320,\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background.paper,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.5)\",\r\n        }}\r\n      >\r\n        <Stack p={3} spacing={2} sx={{ height: \"100vh\" }}>\r\n          <Stack\r\n            direction={\"row\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <Typography variant=\"h5\">Chats</Typography>\r\n            <Stack direction={\"row\"} alignItems={\"center\"} spacing={1}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleOpenDialog();\r\n                }}\r\n              >\r\n                <Users />\r\n              </IconButton>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <Search>\r\n              <SearchIconWrapper>\r\n                <MagnifyingGlass color=\"#709CE6\" />\r\n              </SearchIconWrapper>\r\n              <StyledInputBase placeholder=\"Search...\" />\r\n            </Search>\r\n          </Stack>\r\n          {/* <Stack spacing={1}>\r\n                    <Stack direction={'row'} alignItems={'center'} spacing={2}>\r\n                        <ArchiveBox size={20} />\r\n                        <Button>Archive</Button>\r\n                    </Stack>\r\n                    <Divider />\r\n                </Stack> */}\r\n          <Stack\r\n            direction={\"column\"}\r\n            spacing={1.2}\r\n            sx={{\r\n              height: \"100%\",\r\n              flexGrow: 1,\r\n              overflowY: \"scroll\",\r\n              scrollbarWidth: \"thin\",\r\n              \"&::-webkit-scrollbar\": {\r\n                width: \"0.4em\",\r\n              },\r\n              \"&::-webkit-scrollbar-track\": {\r\n                background: \"#f1f1f1\",\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                backgroundColor: \"#888\",\r\n              },\r\n              \"&::-webkit-scrollbar-thumb:hover\": {\r\n                background: \"#555\",\r\n              },\r\n            }}\r\n          >\r\n            <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n              {/* <Stack spacing={1}>\r\n                <Typography variant=\"subtitle2\" sx={{ color: \"#767676\" }}>\r\n                  Pinned\r\n                </Typography>\r\n                {ChatList.filter((el) => el.pinned).map((el) => {\r\n                  return <ChatElement {...el} />;\r\n                })}\r\n              </Stack> */}\r\n              <Stack spacing={1}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: \"#767676\" }}>\r\n                All Chats\r\n              </Typography>\r\n              {conversations.filter((el) => !el.pinned).map((el, idx) => {\r\n                return <ChatElement key={idx} {...el} />;\r\n              })}\r\n            </Stack>\r\n            </SimpleBarStyle>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n\r\n      {openDialog && (\r\n        <Friends open={openDialog} handleClose={handleCloseDialog} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatss;\r\n","import React from \"react\";\r\nimport Chatss from \"../../components/Chatss\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\nimport Conversation from \"../../components/conversation\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Contact from \"../../components/Contact\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SharedMessage from \"../../components/SharedMessage\";\r\nimport StarredMessage from \"../../components/StarredMessages\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport NoChatSVG from \"../../assets/Illustration/NoChat\";\r\n\r\nconst GeneralApp = () => {\r\n  const theme = useTheme();\r\n  const { sidebar, chat_type } = useSelector((store) => store.app);\r\n  const { oneToOne, contact } = useSelector((store) => store.app.mobile);\r\n  const { conversationId } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n\r\n  return (\r\n    <>\r\n      <Stack direction={\"row\"} sx={{ width: \"100%\" }}>\r\n        {/* {isMobile && <Conversation />} */}\r\n        {isMobile && chat_type === \"individual\" && oneToOne === \"chats\" ? (\r\n          <Chatss />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {!isMobile && <Chatss />}\r\n\r\n        {isMobile && chat_type === \"individual\" && contact === null && oneToOne === \"conversation\" ? (\r\n          <Box\r\n            sx={{\r\n              height: isMobile?\"100vh\":\"100%\",\r\n              width: \"100%\",\r\n              backgroundColor:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#F0F4FA\"\r\n                  : theme.palette.background.default,\r\n            }}\r\n          >\r\n            {conversationId !== null && chat_type === \"individual\" ? (\r\n              <Conversation />\r\n            ) : (\r\n              <Stack\r\n                spacing={2}\r\n                sx={{ height: \"100%\", width: \"100%\" }}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"center\"}\r\n              >\r\n                <NoChatSVG />\r\n                <Typography variant=\"subtitle2\">\r\n                  Select a conversation or start a new one\r\n                </Typography>\r\n              </Stack>\r\n            )}\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        \r\n        {!isMobile && (\r\n          <Box\r\n            sx={{\r\n              height: \"100%\",\r\n              width: sidebar.open\r\n                ? \"calc(100vw - 720px)\"\r\n                : \"calc(100vw - 405px)\",\r\n              backgroundColor:\r\n                theme.palette.mode === \"light\"\r\n                  ? \"#F0F4FA\"\r\n                  : theme.palette.background.default,\r\n            }}\r\n          >\r\n            {conversationId !== null && chat_type === \"individual\" ? (\r\n              <Conversation />\r\n            ) : (\r\n              <Stack\r\n                spacing={2}\r\n                sx={{ height: \"100%\", width: \"100%\" }}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"center\"}\r\n              >\r\n                <NoChatSVG />\r\n                <Typography variant=\"subtitle2\">\r\n                  Select a conversation or start a new one\r\n                </Typography>\r\n              </Stack>\r\n            )}\r\n          </Box>\r\n        )}\r\n\r\n        {isMobile && (contact === \"onetoone\" || contact === \"group\") ? <Contact />: <></>}\r\n\r\n        {!isMobile && sidebar.open &&\r\n          (() => {\r\n            switch (sidebar.type) {\r\n              case \"CONTACT\":\r\n                return <Contact />;\r\n              case \"STARRED\":\r\n                return <StarredMessage />;\r\n              case \"SHARED\":\r\n                return <SharedMessage />;\r\n              default:\r\n                break;\r\n            }\r\n          })()}\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeneralApp;\r\n"],"names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","renderPath","weight","renderPathForWeight","Chat","forwardRef","props","ref","IconBase","displayName","user_id","window","localStorage","getItem","StyledChatBox","styled","Box","theme","cursor","UserComponent","firstName","lastName","id","img","online","useTheme","name","sx","width","borderRadius","backgroundColor","palette","background","paper","p","Stack","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","Typography","Button","onClick","socket","to","from","alert","FriendsComponent","handleClose","IconButton","parseInt","FriendRequestComponent","rid","request_id","UsersList","dispatch","useDispatch","useEffect","getUsers","users","useSelector","state","app","map","el","idx","FriendsList","getFriends","friends","FriendRequestList","getFriendRequests","friendRequests","senderUsers","open","useState","value","setValue","Dialog","fullWidth","onClose","keepMounted","Tabs","onChange","event","newValue","centered","Tab","label","DialogContent","height","isMobile","useResponsive","openDialog","setOpenDialog","conversations","conversation","direct_chat","SelectConversation","data","FetchDirectConversation","position","mode","boxShadow","placeholder","flexGrow","overflowY","scrollbarWidth","timeout","clickOnTrack","filter","pinned","ChatElement","store","sidebar","chat_type","mobile","oneToOne","contact","conversationId","default","NoChat","Contact","type","SharedMessage"],"sourceRoot":""}